version: '3'
services:

  elasticsearch:
    container_name: elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    restart: always

  logstash:
    container_name: logstash
    build: logstash/.
    ports:
      - "1514:1514/udp"
    volumes:
      - ${PWD}/logstash:/config
    environment:
      - XPACK_MONITORING_ENABLED=false
    command: -f /config/conf.d/* --config.reload.automatic
    restart: always

  telegraf:
    container_name: telegraf
    build: telegraf/.
    volumes:
      - ${PWD}/telegraf/mibs:/usr/share/mibs/site
      - ${PWD}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - ${PWD}/telegraf/conf.d:/etc/telegraf/telegraf.d
    command: --config-directory /etc/telegraf/telegraf.d
    restart: always

  influxdb:
    container_name: influxdb
    image: "influxdb:latest"
    environment:
      - INFLUXDB_DB=cadvisor
    volumes:
      - influxdata:/var/lib/influxdb
      - ${PWD}/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    restart: always

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    command: -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influxdb:8086
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: "grafana/grafana:latest"
    ports:
    - "3000:3000"
    volumes:
    - ${PWD}/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    - grafana-storage:/var/lib/grafana
    restart: always

volumes:
  grafana-storage:
  influxdata:
  esdata:

networks:
  default:
